/////
%grid-column {
    position: relative;
    // width: 100%;
    padding-right: $grid-gutter-width / 2;
    padding-left: $grid-gutter-width / 2;
}

@mixin make-container($gutter: $grid-gutter-width) {
    width: 100%;
    padding-right: $grid-gutter-width / 2;
    padding-left: $grid-gutter-width / 2;
    margin-right: auto;
    margin-left: auto;
}

@mixin make-row($gutter: $grid-gutter-width) {
    display: flex;
    // flex-wrap: wrap;
    margin-right: -$grid-gutter-width / 2;
    margin-left: -$grid-gutter-width / 2;
}

.container {
    @include make-container;
}

@for $i from 1 through $infix-list-length {
    .container-#{nth($breakpoint-infix-list, $i)} {
        @include make-container;

        @for $j from $i through 1 {
            $infix: nth($breakpoint-infix-list, $j);
            $screen-size: map-get($map: $grid-breakpoint-list, $key: $infix);
            $max-width: map-get($map: $container-max-width-list, $key: $infix);

            & {
                @media screen and (max-width: $screen-size) {
                    max-width: $max-width;
                }
            }
        }
    }
}

.row {
    @include make-row;
}

.col {
    @extend %grid-column;
}

@for $i from 1 through $number-of-column {
    .col-#{$i} {
        @extend %grid-column;

        flex: 0 0 percentage($i / $number-of-column);

        // Add a `max-width` to ensure content within each column does not blow out
        // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
        // do not appear to require this.
        max-width: percentage($i / $number-of-column);
    }
}
@each $infix, $size in $grid-breakpoint-list {
    @for $i from 1 through $number-of-column {
        .col-#{$infix}-#{$i} {
            @extend %grid-column;

            flex: 0 0 percentage($i / $number-of-column);

            // Add a `max-width` to ensure content within each column does not blow out
            // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
            // do not appear to require this.
            max-width: percentage($i / $number-of-column);
        }
    }
}
